version: 2.1
jobs:
  shellcheck:
    docker:
      - image: koalaman/shellcheck-alpine:stable
    steps:
      - checkout
      - run:
          name: スクリプトのチェック
          command: |
            find . -type f -name '*.sh' | wc -l
            find . -type f -name '*.sh' | xargs shellcheck --external-sources

  build-job:
    docker:
      - image: circleci/node:14.4.0
    steps:
      - checkout
      - run:
          name: 環境変数のセットアップ
          environment:
            ENV_NAME: ./env.production
          command:
            cd scripts
            chmod +x ./env.sh
            ./env.sh
            cd .. && ls -al
      - restore_cache:
          keys:
            - yarn-packages-v1-{{ .Branch }}-{{ checksum "yarn.lock" }}
            - yarn-packages-v1-{{ .Branch }}-
            - yarn-packages-v1-
      - run:
          name: dependencies のインストール
          command: yarn install
      - save_cache:
          paths:
            - ~/.cache/yarn
          key: yarn-packages-v1-{{ .Branch }}-{{ checksum "yarn.lock" }}
      - run:
          name: リントチェック
          command: yarn lint:fix
      - run:
          name: ビルド
          command: yarn build-prod
  
  test:
    docker:
      - image: circleci/node:14.4.0-browsers
    steps:
      - checkout
      - run:
          name: テスト
          command: |
            cd src
            yarn test
      - run:
          name: コードカバレッジの生成
          command: yarn test --coverage
  
  deploy:
    docker:
      - image: circleci/node:14.4.0-browsers
    environment:
      FIREBASE_TOKEN: $FIREBASE_TOKEN
      FIREBASE_PROJECT_ID: $FIREBASE
    steps:
      - checkout
      - run:
          name: firebase-tools のインストール
          command: yarn global add firebase-tools
      - deploy:
          name: hosting のデプロイ
          command: |
            cd scripts
            chmod +x ./firebase.sh
            ./firebase.sh

workflows:
  version: 2.1
  workflow:
    jobs:
      - shellcheck
      - build-job:
          requires:
            - shellcheck
      - test:
          requires:
            - build-job
      - deploy:
          requires:
            - test