{"version":3,"sources":["features/todo.ts","global.styles.ts","firebase/index.ts","config/index.ts","firebase/utils.ts","components/molecules/SpinnerButton.tsx","components/organisms/CreateForm.tsx","containers/organisms/CreateForm.tsx","hooks/use-fetch-task-list.ts","components/molecules/EditFormDialog.tsx","containers/molecules/EditFormDialog.tsx","components/molecules/TaskItem.tsx","containers/molecules/TaskItem.tsx","components/organisms/TaskBoard.tsx","containers/organisms/TaskBoard.tsx","components/pages/Todo.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["todoSlice","createSlice","name","initialState","todoList","doneList","reducers","fetchTodoList","state","action","payload","fetchDoneList","taskCreated","id","createdAt","Date","taskDone","task","taskTodo","taskUpdated","data","taskDeleted","GlobalStyle","createGlobalStyle","firebaseConfig","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firebase","initializeApp","analytics","db","firestore","getTaskList","collectionId","a","collection","get","snapshot","transformedTaskList","docs","map","doc","reduce","accumulator","createdTask","collectionRef","taskRef","exists","set","todoListRef","doneListRef","todoListSnapshot","doneListSnapshot","delete","updatedTask","title","deadline","update","useStyles","makeStyles","theme","createStyles","wrapper","margin","spacing","position","buttonProgress","top","left","marginTop","marginLeft","SpinnerButton","children","isLoading","otherProps","classes","className","Button","disabled","CircularProgress","size","FormWrapper","styled","form","FormContents","div","FormActions","CreateForm","undefined","handleTaskCreatedSubmit","handleChange","onSubmit","TextField","label","value","onChange","InputLabelProps","shrink","required","type","color","EnhancedCreateForm","useState","setIsLoading","setCreatedTask","dispatch","useDispatch","actions","event","preventDefault","firebaseUtils","Error","target","useFetchTaskList","useSelector","useEffect","isUnmounted","doneTaskList","todoTaskList","load","EditFormDialog","isOpen","handleOpen","handleClose","handleTaskUpdatedClick","handleTaskDeletedClick","Fab","aria-label","onClick","Dialog","open","onClose","aria-labelledby","DialogTitle","DialogContent","autoFocus","DialogActions","EnhancedEditFormDialog","setIsUnmounted","setIsOpen","setUpdatedTask","ItemWrapper","li","ButtonWrapper","TaskItem","isDone","handleTaskDoneClick","handleTaskTodoClick","LinearProgress","variant","startIcon","endIcon","EnhancedTaskItem","CircularWrapper","BoardWrapper","ListWrapper","ListItemWrapper","ul","TaskBoard","Object","values","EnhancedTaskBoard","Wrapper","Todo","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","middleware","getDefaultMiddleware","serializableCheck","store","configureStore","reducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dc16385d.chunk.js","sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\nexport type Task = {\n  id: string;\n  title: string;\n  deadline?: string;\n  createdAt: Date;\n};\n\nexport type TaskList = {\n  [id: string]: Task;\n};\n\nexport type TodoState = {\n  todoList: TaskList;\n  doneList: TaskList;\n};\n\nexport const todoSlice = createSlice({\n  name: 'todo',\n  initialState: { todoList: {}, doneList: {} } as TodoState,\n  reducers: {\n    fetchTodoList: (state, action: PayloadAction<TaskList>) => {\n      state.todoList = action.payload;\n    },\n    fetchDoneList: (state, action: PayloadAction<TaskList>) => {\n      state.doneList = action.payload;\n    },\n    taskCreated: (state, action: PayloadAction<Omit<Task, 'createdAt'>>) => {\n      const { id } = action.payload;\n      const createdAt = new Date();\n      state.todoList[id] = { ...action.payload, id, createdAt };\n    },\n    taskDone: (state, action: PayloadAction<string>) => {\n      const id = action.payload;\n      const task = state.todoList[id];\n\n      if (task) {\n        state.doneList[id] = { ...task };\n        delete state.todoList[id];\n      }\n    },\n    taskTodo: (state, action: PayloadAction<string>) => {\n      const id = action.payload;\n      const task = state.doneList[id];\n\n      if (task) {\n        state.todoList[id] = { ...task };\n        delete state.doneList[id];\n      }\n    },\n    taskUpdated: (state, action: PayloadAction<Omit<Task, 'createdAt'>>) => {\n      const { id, ...data } = action.payload;\n      const task = state.todoList[id];\n\n      if (task) state.todoList[id] = { ...task, ...data };\n    },\n    taskDeleted: (state, action: PayloadAction<string>) => {\n      const id = action.payload;\n      const task = state.todoList[id];\n\n      if (task) delete state.todoList[id];\n    },\n  },\n});\n","import { createGlobalStyle } from 'styled-components';\n\nconst GlobalStyle = createGlobalStyle`\n  body {\n    font-family: 'Roboto', sans-serif;\n  }\n\n  a {\n    color: black;\n    text-decoration: none;\n  }\n\n  * {\n    box-sizing: border-box;\n  }\n`;\n\nexport default GlobalStyle;\n","import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/analytics';\n\nimport config from 'config';\n\nconst firebaseConfig = {\n  apiKey: config.FIREBASE_API_KEY,\n  authDomain: config.FIREBASE_AUTH_DOMAIN,\n  projectId: config.FIREBASE_PROJECT_ID,\n  storageBucket: config.FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: config.FIREBASE_MESSAGING_SENDER_ID,\n  appId: config.FIREBASE_APP_ID,\n  measurementId: config.FIREBASE_MEASUREMENT_ID,\n};\n\nfirebase.initializeApp(firebaseConfig);\nfirebase.analytics();\nexport const db = firebase.firestore();\n\nexport default firebase;\n","export default {\n  FIREBASE_API_KEY: process.env.REACT_APP_FIREBASE_API_KEY,\n  FIREBASE_AUTH_DOMAIN: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n  FIREBASE_PROJECT_ID: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  FIREBASE_STORAGE_BUCKET: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  FIREBASE_MESSAGING_SENDER_ID:\n    process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n  FIREBASE_APP_ID: process.env.REACT_APP_FIREBASE_APP_ID,\n  FIREBASE_MEASUREMENT_ID: process.env.REACT_APP_FIREBASE_MEASUREMENT_ID,\n};\n","import { db } from 'firebase/index';\nimport { Task, TaskList } from 'features/todo';\n\nconst getTaskList = async (collectionId: string): Promise<TaskList> => {\n  const snapshot = await db.collection(collectionId).get();\n  const transformedTaskList = snapshot.docs\n    .map((doc) => {\n      return doc.data() as Task;\n    })\n    .reduce((accumulator: TaskList, collection: Task) => {\n      accumulator[collection.id] = collection;\n\n      return accumulator;\n    }, {});\n\n  return transformedTaskList;\n};\n\nconst taskCreated = async (\n  createdTask: Pick<Task, 'title' | 'deadline'>,\n): Promise<string> => {\n  const collectionRef = db.collection('todoList');\n  const { id } = collectionRef.doc();\n  const taskRef = collectionRef.doc(id);\n  const snapshot = await taskRef.get();\n\n  if (!snapshot.exists) {\n    const createdAt = new Date();\n    await taskRef.set({\n      ...createdTask,\n      id,\n      createdAt,\n    });\n  }\n\n  return id;\n};\n\nconst taskDone = async (id: string): Promise<void> => {\n  const todoListRef = db.collection('todoList').doc(id);\n  const doneListRef = db.collection('doneList').doc(id);\n  const todoListSnapshot = await todoListRef.get();\n  const doneListSnapshot = await doneListRef.get();\n\n  if (todoListSnapshot.exists && !doneListSnapshot.exists) {\n    const task = todoListSnapshot.data();\n\n    await doneListRef.set({ ...task });\n    await todoListRef.delete();\n  }\n};\n\nconst taskTodo = async (id: string): Promise<void> => {\n  const todoListRef = db.collection('todoList').doc(id);\n  const doneListRef = db.collection('doneList').doc(id);\n  const todoListSnapshot = await todoListRef.get();\n  const doneListSnapshot = await doneListRef.get();\n\n  if (!todoListSnapshot.exists && doneListSnapshot.exists) {\n    const task = doneListSnapshot.data();\n\n    await todoListRef.set({ ...task });\n    await doneListRef.delete();\n  }\n};\n\nconst taskUpdated = async (\n  updatedTask: Omit<Task, 'createdAt'>,\n): Promise<void> => {\n  const { id, title, deadline } = updatedTask;\n  const taskRef = db.collection('todoList').doc(id);\n  const snapshot = await taskRef.get();\n\n  if (snapshot.exists) {\n    await taskRef.update({\n      title,\n      deadline,\n    });\n  }\n};\n\nconst taskDeleted = async (id: string): Promise<void> => {\n  const taskRef = db.collection('todoList').doc(id);\n  const snapshot = await taskRef.get();\n\n  if (snapshot.exists) {\n    await taskRef.delete();\n  }\n};\n\nexport default {\n  getTaskList,\n  taskCreated,\n  taskDone,\n  taskTodo,\n  taskUpdated,\n  taskDeleted,\n};\n","import React, { FC } from 'react';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    wrapper: {\n      margin: theme.spacing(1),\n      position: 'relative',\n    },\n    buttonProgress: {\n      position: 'absolute',\n      top: '50%',\n      left: '50%',\n      marginTop: -12,\n      marginLeft: -12,\n    },\n  }),\n);\n\nconst SpinnerButton: FC<{\n  children: string;\n  isLoading: boolean;\n  [other: string]: unknown;\n}> = ({ children = '', isLoading = false, ...otherProps }) => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.wrapper}>\n      <Button disabled={isLoading} {...otherProps}>\n        {children}\n      </Button>\n      {isLoading && (\n        <CircularProgress size={24} className={classes.buttonProgress} />\n      )}\n    </div>\n  );\n};\n\nexport default SpinnerButton;\n","import React, { FC } from 'react';\nimport styled from 'styled-components';\nimport TextField from '@material-ui/core/TextField';\n\nimport SpinnerButton from 'components/molecules/SpinnerButton';\n\ntype Props = {\n  isLoading: boolean;\n  title: string;\n  deadline?: string;\n  handleTaskCreatedSubmit: (event: React.FormEvent<HTMLFormElement>) => void;\n  handleChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\n};\n\nconst CreateForm: FC<Props> = ({\n  isLoading = false,\n  title = '',\n  deadline = undefined,\n  handleTaskCreatedSubmit = () => undefined,\n  handleChange = () => undefined,\n}) => (\n  <FormWrapper onSubmit={handleTaskCreatedSubmit}>\n    <FormContents>\n      <TextField\n        id=\"create-title\"\n        label=\"やる事\"\n        value={title}\n        onChange={handleChange}\n        name=\"title\"\n        InputLabelProps={{\n          shrink: true,\n        }}\n        disabled={isLoading}\n        required\n      />\n      <TextField\n        id=\"create-date\"\n        label=\"期日\"\n        type=\"date\"\n        value={deadline}\n        onChange={handleChange}\n        name=\"deadline\"\n        InputLabelProps={{\n          shrink: true,\n        }}\n        disabled={isLoading}\n      />\n    </FormContents>\n    <FormActions>\n      <SpinnerButton isLoading={isLoading} type=\"submit\" color=\"primary\">\n        追加する\n      </SpinnerButton>\n    </FormActions>\n  </FormWrapper>\n);\n\nconst FormWrapper = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-top: 30px;\n`;\n\nconst FormContents = styled.div`\n  display: flex;\n  justify-content: space-between;\n  width: 370px;\n\n  @media screen and (max-width: 800px) {\n    display: grid;\n    grid-template-columns: 1fr;\n    grid-gap: 10px;\n    width: 250px;\n  }\n`;\n\nconst FormActions = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  width: 370px;\n\n  @media screen and (max-width: 800px) {\n    width: 250px;\n  }\n`;\n\nexport default CreateForm;\n","import React, { FC, useState } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport firebaseUtils from 'firebase/utils';\nimport { todoSlice } from 'features/todo';\nimport CreateForm from 'components/organisms/CreateForm';\n\nconst EnhancedCreateForm: FC = () => {\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n  const [createdTask, setCreatedTask] = useState<{\n    title: string;\n    deadline?: string;\n  }>({\n    title: '',\n    deadline: '',\n  });\n  const dispatch = useDispatch();\n\n  const { taskCreated } = todoSlice.actions;\n  const { title, deadline } = createdTask;\n\n  const handleTaskCreatedSubmit = async (\n    event: React.FormEvent<HTMLFormElement>,\n  ) => {\n    event.preventDefault();\n    setIsLoading(true);\n\n    try {\n      const id = await firebaseUtils.taskCreated(createdTask);\n      dispatch(taskCreated({ id, ...createdTask }));\n\n      setCreatedTask({\n        title: '',\n        deadline: '',\n      });\n    } catch (error) {\n      throw new Error('error create task');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    event.preventDefault();\n    const { name, value } = event.target;\n\n    setCreatedTask({ ...createdTask, [name]: value });\n  };\n\n  return (\n    <CreateForm\n      {...{ isLoading, title, deadline, handleTaskCreatedSubmit, handleChange }}\n    />\n  );\n};\n\nexport default EnhancedCreateForm;\n","import { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport firebaseUtils from 'firebase/utils';\nimport { TaskList, todoSlice, TodoState } from 'features/todo';\n\ntype ReturnValues = {\n  isLoading: boolean;\n  doneList: TaskList;\n  todoList: TaskList;\n};\n\nconst useFetchTaskList = (): ReturnValues => {\n  const [isLoading, setIsLoading] = useState(false);\n  const doneList = useSelector((state: TodoState) => state.doneList);\n  const todoList = useSelector((state: TodoState) => state.todoList);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    let isUnmounted = false;\n    const { fetchDoneList, fetchTodoList } = todoSlice.actions;\n\n    const load = async (): Promise<void> => {\n      setIsLoading(true);\n\n      try {\n        const doneTaskList = await firebaseUtils.getTaskList('doneList');\n        const todoTaskList = await firebaseUtils.getTaskList('todoList');\n\n        if (!isUnmounted) {\n          dispatch(fetchDoneList(doneTaskList));\n          dispatch(fetchTodoList(todoTaskList));\n        }\n      } catch (error) {\n        throw new Error(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    void load();\n\n    return () => {\n      isUnmounted = true;\n    };\n  }, [dispatch]);\n\n  return { isLoading, doneList, todoList };\n};\n\nexport default useFetchTaskList;\n","import React, { FC } from 'react';\nimport Fab from '@material-ui/core/Fab';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport EditIcon from '@material-ui/icons/Edit';\n\nimport SpinnerButton from './SpinnerButton';\n\ntype Props = {\n  isLoading: boolean;\n  isOpen: boolean;\n  title: string;\n  deadline?: string;\n  handleOpen: () => void;\n  handleClose: () => void;\n  handleTaskUpdatedClick: (event: React.MouseEvent<HTMLButtonElement>) => void;\n  handleTaskDeletedClick: (event: React.MouseEvent<HTMLButtonElement>) => void;\n  handleChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\n};\n\nconst EditFormDialog: FC<Props> = ({\n  isLoading = false,\n  isOpen = false,\n  title = '',\n  deadline = undefined,\n  handleOpen = () => undefined,\n  handleClose = () => undefined,\n  handleTaskUpdatedClick = () => undefined,\n  handleTaskDeletedClick = () => undefined,\n  handleChange = () => undefined,\n}) => (\n  <>\n    <Fab size=\"medium\" color=\"secondary\" aria-label=\"edit\" onClick={handleOpen}>\n      <EditIcon />\n    </Fab>\n    <Dialog\n      open={isOpen}\n      onClose={handleClose}\n      aria-labelledby=\"form-dialog-title\"\n    >\n      <DialogTitle id=\"form-dialog-title\">編集</DialogTitle>\n      <DialogContent>\n        <TextField\n          autoFocus\n          id=\"edit-title\"\n          label=\"やる事\"\n          value={title}\n          onChange={handleChange}\n          name=\"title\"\n          InputLabelProps={{\n            shrink: true,\n          }}\n          disabled={isLoading}\n          required\n        />\n        <TextField\n          id=\"edit-date\"\n          label=\"期日\"\n          type=\"date\"\n          value={deadline}\n          onChange={handleChange}\n          name=\"deadline\"\n          InputLabelProps={{\n            shrink: true,\n          }}\n          disabled={isLoading}\n        />\n      </DialogContent>\n      <DialogActions>\n        <SpinnerButton\n          isLoading={isLoading}\n          onClick={handleTaskUpdatedClick}\n          color=\"primary\"\n        >\n          更新する\n        </SpinnerButton>\n        <SpinnerButton\n          isLoading={isLoading}\n          onClick={handleTaskDeletedClick}\n          color=\"secondary\"\n        >\n          削除する\n        </SpinnerButton>\n      </DialogActions>\n    </Dialog>\n  </>\n);\n\nexport default EditFormDialog;\n","import React, { FC, useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport firebaseUtils from 'firebase/utils';\nimport { todoSlice, TodoState } from 'features/todo';\nimport EditFormDialog from 'components/molecules/EditFormDialog';\n\nconst EnhancedEditFormDialog: FC<{ id: string }> = ({ id = '' }) => {\n  const [isUnmounted, setIsUnmounted] = useState(false);\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n  const [isOpen, setIsOpen] = useState<boolean>(false);\n  const todoList = useSelector((state: TodoState) => state.todoList);\n  const dispatch = useDispatch();\n  const [updatedTask, setUpdatedTask] = useState<{\n    title: string;\n    deadline?: string;\n  }>({\n    title: todoList[id]?.title,\n    deadline: todoList[id]?.deadline,\n  });\n\n  useEffect(() => {\n    setIsUnmounted(false);\n\n    return () => {\n      setIsUnmounted(true);\n    };\n  }, []);\n\n  const { taskUpdated, taskDeleted } = todoSlice.actions;\n  const { title, deadline } = updatedTask;\n\n  const handleTaskUpdatedClick = async (\n    event: React.MouseEvent<HTMLButtonElement>,\n  ) => {\n    event.preventDefault();\n    setIsLoading(true);\n\n    try {\n      await firebaseUtils.taskUpdated({\n        id,\n        ...updatedTask,\n      });\n      if (!isUnmounted) {\n        dispatch(taskUpdated({ id, ...updatedTask }));\n      }\n    } catch (error) {\n      throw new Error('error update task');\n    } finally {\n      setIsLoading(false);\n      setIsOpen(false);\n    }\n  };\n\n  const handleTaskDeletedClick = async (\n    event: React.MouseEvent<HTMLButtonElement>,\n  ) => {\n    event.preventDefault();\n    setIsLoading(true);\n\n    try {\n      await firebaseUtils.taskDeleted(id);\n      if (!isUnmounted) {\n        dispatch(taskDeleted(id));\n      }\n    } catch (error) {\n      throw new Error('error delete task');\n    } finally {\n      setIsLoading(false);\n      setIsOpen(false);\n    }\n  };\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    event.preventDefault();\n    const { name, value } = event.target;\n\n    setUpdatedTask({ ...updatedTask, [name]: value });\n  };\n\n  return (\n    <EditFormDialog\n      {...{\n        isLoading,\n        isOpen,\n        title,\n        deadline,\n        handleOpen: () => setIsOpen(true),\n        handleClose: () => setIsOpen(false),\n        handleTaskUpdatedClick,\n        handleTaskDeletedClick,\n        handleChange,\n      }}\n    />\n  );\n};\n\nexport default EnhancedEditFormDialog;\n","import React, { FC } from 'react';\nimport styled from 'styled-components';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Button from '@material-ui/core/Button';\nimport FastForwardIcon from '@material-ui/icons/FastForward';\nimport FastRewindIcon from '@material-ui/icons/FastRewind';\n\nimport UpdateFormDialog from 'containers/molecules/EditFormDialog';\n\ntype Props = {\n  isLoading: boolean;\n  id: string;\n  title: string;\n  deadline?: string;\n  isDone?: boolean;\n  handleTaskDoneClick: (event: React.MouseEvent<HTMLButtonElement>) => void;\n  handleTaskTodoClick: (event: React.MouseEvent<HTMLButtonElement>) => void;\n};\n\nconst TaskItem: FC<Props> = ({\n  isLoading = false,\n  id = '',\n  title = '',\n  deadline = undefined,\n  isDone = false,\n  handleTaskDoneClick = () => undefined,\n  handleTaskTodoClick = () => undefined,\n}) => (\n  <>\n    {isLoading ? (\n      <LinearProgress />\n    ) : (\n      <ItemWrapper>\n        <p>やる事：{title}</p>\n        <p>期日：{deadline}</p>\n        {isDone ? (\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            startIcon={<FastRewindIcon />}\n            onClick={handleTaskTodoClick}\n          >\n            TODO\n          </Button>\n        ) : (\n          <ButtonWrapper>\n            <UpdateFormDialog id={id} />\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              endIcon={<FastForwardIcon />}\n              onClick={handleTaskDoneClick}\n            >\n              DONE\n            </Button>\n          </ButtonWrapper>\n        )}\n      </ItemWrapper>\n    )}\n  </>\n);\n\nconst ItemWrapper = styled.li`\n  padding-bottom: 8px;\n  margin: 0 15px 5px 15px;\n  border-bottom: 1px solid lightgray;\n`;\n\nconst ButtonWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nexport default TaskItem;\n","import React, { FC, useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport firebaseUtils from 'firebase/utils';\nimport { todoSlice } from 'features/todo';\nimport TaskItem from 'components/molecules/TaskItem';\n\ntype Props = {\n  id: string;\n  title: string;\n  deadline?: string;\n  isDone?: boolean;\n};\n\nconst EnhancedTaskItem: FC<Props> = ({\n  id = '',\n  title = '',\n  deadline = undefined,\n  isDone = false,\n}) => {\n  const [isUnmounted, setIsUnmounted] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    setIsUnmounted(false);\n\n    return () => {\n      setIsUnmounted(true);\n    };\n  }, []);\n\n  const { taskDone, taskTodo } = todoSlice.actions;\n\n  const handleTaskDoneClick = async (\n    event: React.MouseEvent<HTMLButtonElement>,\n  ) => {\n    event.preventDefault();\n    setIsLoading(true);\n\n    try {\n      await firebaseUtils.taskDone(id);\n      if (!isUnmounted) {\n        dispatch(taskDone(id));\n      }\n    } catch (error) {\n      throw new Error('error task done');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleTaskTodoClick = async (\n    event: React.MouseEvent<HTMLButtonElement>,\n  ) => {\n    event.preventDefault();\n    setIsLoading(true);\n\n    try {\n      await firebaseUtils.taskTodo(id);\n      if (!isUnmounted) {\n        dispatch(taskTodo(id));\n      }\n    } catch (error) {\n      throw new Error('error task todo');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <TaskItem\n      {...{\n        isLoading,\n        id,\n        title,\n        deadline,\n        isDone,\n        handleTaskDoneClick,\n        handleTaskTodoClick,\n      }}\n    />\n  );\n};\n\nexport default EnhancedTaskItem;\n","import React, { FC } from 'react';\nimport styled from 'styled-components';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport { TaskList } from 'features/todo';\nimport TaskItem from 'containers/molecules/TaskItem';\n\ntype Props = {\n  isLoading: boolean;\n  doneList: TaskList;\n  todoList: TaskList;\n};\n\nconst TaskBoard: FC<Props> = ({\n  isLoading = false,\n  todoList = {},\n  doneList = {},\n}) => (\n  <>\n    {isLoading ? (\n      <CircularWrapper>\n        <CircularProgress />\n      </CircularWrapper>\n    ) : (\n      <BoardWrapper>\n        <ListWrapper>\n          <h2>Todoリスト</h2>\n          <ListItemWrapper>\n            {Object.values(todoList).map(\n              ({ id = '', title = '', deadline = undefined }) => (\n                <TaskItem key={id} {...{ id, title, deadline }} />\n              ),\n            )}\n          </ListItemWrapper>\n        </ListWrapper>\n        <ListWrapper>\n          <h2>Doneリスト</h2>\n          <ListItemWrapper>\n            {Object.values(doneList).map(\n              ({ id = '', title = '', deadline = undefined }) => (\n                <TaskItem key={id} {...{ id, title, deadline }} isDone />\n              ),\n            )}\n          </ListItemWrapper>\n        </ListWrapper>\n      </BoardWrapper>\n    )}\n  </>\n);\n\nconst CircularWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  height: 70vh;\n`;\n\nconst BoardWrapper = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  justify-items: center;\n\n  @media screen and (max-width: 800px) {\n    grid-template-columns: 1fr;\n  }\n`;\n\nconst ListWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 80%;\n  height: 450px;\n`;\n\nconst ListItemWrapper = styled.ul`\n  display: flex;\n  flex-direction: column;\n  align-content: center;\n  width: 100%;\n  height: 100%;\n  padding-left: 0;\n  overflow-y: scroll;\n  list-style: none;\n`;\n\nexport default TaskBoard;\n","import React, { FC } from 'react';\n\nimport useFetchTaskList from 'hooks/use-fetch-task-list';\nimport TaskBoard from 'components/organisms/TaskBoard';\n\nconst EnhancedTaskBoard: FC = () => {\n  const { isLoading, doneList, todoList } = useFetchTaskList();\n\n  return (\n    <TaskBoard\n      {...{\n        isLoading,\n        doneList,\n        todoList,\n      }}\n    />\n  );\n};\n\nexport default EnhancedTaskBoard;\n","import React, { FC } from 'react';\nimport styled from 'styled-components';\n\nimport CreateForm from 'containers/organisms/CreateForm';\nimport TaskBoard from 'containers/organisms/TaskBoard';\n\nconst Todo: FC = () => (\n  <Wrapper>\n    <CreateForm />\n    <TaskBoard />\n  </Wrapper>\n);\n\nconst Wrapper = styled.div`\n  width: 100%;\n`;\n\nexport default Todo;\n","import React, { FC } from 'react';\n\nimport GlobalStyle from 'global.styles';\nimport Todo from 'components/pages/Todo';\n\nconst App: FC = () => (\n  <>\n    <GlobalStyle />\n    <Todo />\n  </>\n);\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler): void => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    void import('web-vitals').then(\n      ({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n        getCLS(onPerfEntry);\n        getFID(onPerfEntry);\n        getFCP(onPerfEntry);\n        getLCP(onPerfEntry);\n        getTTFB(onPerfEntry);\n      },\n    );\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\n\nimport { todoSlice } from 'features/todo';\nimport App from 'App';\nimport reportWebVitals from 'reportWebVitals';\n\nconst middleware = getDefaultMiddleware({ serializableCheck: false });\nconst store = configureStore({\n  reducer: todoSlice.reducer,\n  middleware,\n});\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}